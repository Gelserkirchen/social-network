{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/src/components/Profile/ProfileContainer.jsx\";\nimport { getProfile, getProfileStatus, updateProfileStatus } from '../../redux/reducers/profileReducer';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { withRouter } from 'react-router';\nimport { withAuthRedirectComponent } from '../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorisedUserId;\n    }\n\n    this.props.getProfile(userId);\n    this.props.getProfileStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('i am here');\n\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // debugger\n  return {\n    profile: state.profilePage,\n    isAuth: state.auth.isAuth,\n    authorisedUserId: state.auth.userId\n  };\n};\n\nexport default compose(withAuthRedirectComponent, connect(mapStateToProps, {\n  getProfile,\n  getProfileStatus,\n  updateProfileStatus\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/src/components/Profile/ProfileContainer.jsx"],"names":["getProfile","getProfileStatus","updateProfileStatus","React","connect","Profile","withRouter","withAuthRedirectComponent","compose","ProfileContainer","Component","refreshProfile","userId","props","match","params","authorisedUserId","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","console","log","render","mapStateToProps","state","profile","profilePage","isAuth","auth"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,gBAArB,EAAuCC,mBAAvC,QAAkE,qCAAlE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,yBAAT,QAA0C,yBAA1C;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AAE3CC,EAAAA,cAAc,GAAG;AACf,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;AACD;;AACD,SAAKH,KAAL,CAAWb,UAAX,CAAsBY,MAAtB;AACA,SAAKC,KAAL,CAAWZ,gBAAX,CAA4BW,MAA5B;AACD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,cAAL;AACD;;AAEDO,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AACjDC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,QAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,IAAkCO,SAAS,CAACL,KAAV,CAAgBC,MAAhB,CAAuBH,MAA7D,EAAqE;AACnE,WAAKD,cAAL;AACD;AAEF;;AAEHa,EAAAA,MAAM,GAAG;AACP,wBAAO,QAAC,OAAD,OAAa,KAAKX;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAzB4C;;AA4B/C,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC;AACA,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACE,WADV;AAELC,IAAAA,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWD,MAFd;AAGLb,IAAAA,gBAAgB,EAAEU,KAAK,CAACI,IAAN,CAAWlB;AAHxB,GAAP;AAKD,CAPD;;AASA,eAAeJ,OAAO,CACpBD,yBADoB,EAEpBH,OAAO,CAACqB,eAAD,EAAkB;AAACzB,EAAAA,UAAD;AAAaC,EAAAA,gBAAb;AAA+BC,EAAAA;AAA/B,CAAlB,CAFa,EAGpBI,UAHoB,CAAP,CAIbG,gBAJa,CAAf","sourcesContent":["import { getProfile, getProfileStatus, updateProfileStatus } from '../../redux/reducers/profileReducer'\nimport React from 'react'\nimport {connect} from 'react-redux';\nimport Profile from './Profile';\nimport { withRouter } from 'react-router';\nimport { withAuthRedirectComponent } from '../HOC/withAuthRedirect'\nimport { compose } from 'redux'\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n      let userId = this.props.match.params.userId\n      if (!userId) {\n        userId = this.props.authorisedUserId\n      }\n      this.props.getProfile(userId)\n      this.props.getProfileStatus(userId)\n    }\n\n    componentDidMount() {\n      this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n      console.log('i am here')\n      if (this.props.match.params.userId != prevProps.match.params.userId) {\n        this.refreshProfile()\n      }\n\n    }\n\n  render() {\n    return <Profile {...this.props}/>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // debugger\n  return {\n    profile: state.profilePage,\n    isAuth: state.auth.isAuth,\n    authorisedUserId: state.auth.userId,\n  }\n}\n\nexport default compose(\n  withAuthRedirectComponent,\n  connect(mapStateToProps, {getProfile, getProfileStatus, updateProfileStatus}),\n  withRouter,\n)(ProfileContainer)\n\n\n\n"]},"metadata":{},"sourceType":"module"}