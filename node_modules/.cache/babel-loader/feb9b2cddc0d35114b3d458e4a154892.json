{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{reduxForm,Field}from'redux-form';import{Input}from'../MultiComponents/FormsControl/FormsControl';import{valueValidator}from'../Utils/Validators/validators';import styles from'../Login/Login.module.css';import{Redirect}from'react-router';var LoginForm=function LoginForm(props){// debugger\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{component:Input,name:\"login\",validate:[valueValidator],placeholder:\"Login\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{component:Input,name:\"password\",validate:[valueValidator],placeholder:\"Password\",type:\"password\"})}),props.error&&/*#__PURE__*/_jsx(\"div\",{className:styles.errorEmailLoginStyle,children:props.error}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Field,{component:\"input\",name:\"rememberMe\",type:\"checkbox\"}),\"Remember Me\"]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Login\"})})]})});};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var Login=function Login(props){var onSubmit=function onSubmit(formData){if(!props.isAuth){props.login(formData.login,formData.password,formData.rememberMe);}};if(props.isAuth){return/*#__PURE__*/_jsx(Redirect,{to:\"/profile\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsx(LoginReduxForm,{onSubmit:onSubmit})]});};export default Login;","map":{"version":3,"sources":["/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/src/components/Login/Login.jsx"],"names":["React","reduxForm","Field","Input","valueValidator","styles","Redirect","LoginForm","props","handleSubmit","error","errorEmailLoginStyle","LoginReduxForm","form","Login","onSubmit","formData","isAuth","login","password","rememberMe"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAiC,YAAjC,CACA,OAASC,KAAT,KAAsB,8CAAtB,CACA,OAASC,cAAT,KAA+B,gCAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,2BAAnB,CACA,OAASC,QAAT,KAAyB,cAAzB,CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB;AACA,mBACI,kCACI,cAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,wBACI,kCAAK,KAAC,KAAD,EAAO,SAAS,CAAEN,KAAlB,CAAyB,IAAI,CAAE,OAA/B,CAAwC,QAAQ,CAAE,CAACC,cAAD,CAAlD,CAAoE,WAAW,CAAE,OAAjF,EAAL,EADJ,cAEI,kCAAK,KAAC,KAAD,EAAO,SAAS,CAAED,KAAlB,CAAyB,IAAI,CAAE,UAA/B,CAA2C,QAAQ,CAAE,CAACC,cAAD,CAArD,CAAuE,WAAW,CAAE,UAApF,CAAgG,IAAI,CAAE,UAAtG,EAAL,EAFJ,CAGKI,KAAK,CAACE,KAAN,eAAe,YAAK,SAAS,CAAEL,MAAM,CAACM,oBAAvB,UAA8CH,KAAK,CAACE,KAApD,EAHpB,cAII,oCAAK,KAAC,KAAD,EAAO,SAAS,CAAE,OAAlB,CAA2B,IAAI,CAAE,YAAjC,CAA+C,IAAI,CAAC,UAApD,EAAL,iBAJJ,cAKI,kCAAK,iCAAL,EALJ,GADJ,EADJ,CAWH,CAbD,CAeA,GAAME,CAAAA,cAAc,CAAGX,SAAS,CAAC,CAACY,IAAI,CAAE,OAAP,CAAD,CAAT,CAA2BN,SAA3B,CAAvB,CAEA,GAAMO,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACN,KAAD,CAAW,CACrB,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAC3B,GAAI,CAACR,KAAK,CAACS,MAAX,CAAmB,CACfT,KAAK,CAACU,KAAN,CAAYF,QAAQ,CAACE,KAArB,CAA4BF,QAAQ,CAACG,QAArC,CAA+CH,QAAQ,CAACI,UAAxD,EACH,CACJ,CAJD,CAMA,GAAIZ,KAAK,CAACS,MAAV,CAAkB,CACd,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CAED,mBACI,oCACI,6BADJ,cAEI,KAAC,cAAD,EAAgB,QAAQ,CAAEF,QAA1B,EAFJ,GADJ,CAMH,CAjBD,CAmBA,cAAeD,CAAAA,KAAf","sourcesContent":["import React from 'react'\nimport { reduxForm, Field } from 'redux-form'\nimport { Input } from '../MultiComponents/FormsControl/FormsControl';\nimport { valueValidator } from '../Utils/Validators/validators';\nimport styles from '../Login/Login.module.css';\nimport { Redirect } from 'react-router';\n\n\nconst LoginForm = (props) => {\n    // debugger\n    return (\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                <div><Field component={Input} name={\"login\"} validate={[valueValidator]} placeholder={\"Login\"} /></div>\n                <div><Field component={Input} name={\"password\"} validate={[valueValidator]} placeholder={\"Password\"} type={\"password\"}/></div>\n                {props.error && <div className={styles.errorEmailLoginStyle}>{props.error}</div>}\n                <div><Field component={\"input\"} name={\"rememberMe\"} type=\"checkbox\" />Remember Me</div>\n                <div><button>Login</button></div>\n            </form>\n        </div>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        if (!props.isAuth) {\n            props.login(formData.login, formData.password, formData.rememberMe)\n        }\n    }\n    \n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\nexport default Login "]},"metadata":{},"sourceType":"module"}