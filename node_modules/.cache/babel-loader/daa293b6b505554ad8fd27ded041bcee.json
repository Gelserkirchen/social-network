{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{profileAPI}from'../../api/api';var ADD_POST='ADD_POST';var SET_USERS_PROFILE='SET_USERS_PROFILE';var GET_USER_PROFILE_STATUS='GET_USER_PROFILE_STATUS';export var addPostAction=function addPostAction(text){return{type:ADD_POST,value:text};};export var setProfileUsersAction=function setProfileUsersAction(profile){return{type:SET_USERS_PROFILE,value:profile};};export var getProfileStatusAction=function getProfileStatusAction(value){return{type:GET_USER_PROFILE_STATUS,status:value};};var initialState={PostsData:[{id:'1',message:'Hi it is my first post'},{id:'2',message:'This is second post'}],profile:null,status:\"\"};var profileReducer=function profileReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;if(!action){return;}switch(action.type){case ADD_POST:return _objectSpread(_objectSpread({},state),{},{PostsData:[].concat(_toConsumableArray(state.PostsData),[{id:action.id,message:action.value,likes:'0'}])});case SET_USERS_PROFILE:return _objectSpread(_objectSpread({},state),{},{profile:action.value});case GET_USER_PROFILE_STATUS:return _objectSpread(_objectSpread({},state),{},{status:action.status});default:return state;}};export default profileReducer;// Thunk for get profile \nexport var getProfile=function getProfile(userId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return profileAPI.getUsersProfile(userId);case 2:response=_context.sent;dispatch(setProfileUsersAction(response.data));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};// Thunk for get profile \nexport var getProfileStatus=function getProfileStatus(userId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return profileAPI.getStatus(userId);case 2:response=_context2.sent;dispatch(getProfileStatusAction(response.data));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// Thunk for updating profile status\nexport var updateProfileStatus=function updateProfileStatus(status){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return profileAPI.updateStatus(status);case 2:response=_context3.sent;if(response.data.resultCode===0){dispatch(getProfileStatusAction(status));}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};// Thunk for add post form messages in profile\nexport var addPost=function addPost(text){return function(dispatch){dispatch(addPostAction(text));};};","map":{"version":3,"sources":["/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/src/redux/reducers/profileReducer.js"],"names":["profileAPI","ADD_POST","SET_USERS_PROFILE","GET_USER_PROFILE_STATUS","addPostAction","text","type","value","setProfileUsersAction","profile","getProfileStatusAction","status","initialState","PostsData","id","message","profileReducer","state","action","likes","getProfile","userId","dispatch","getUsersProfile","response","data","getProfileStatus","getStatus","updateProfileStatus","updateStatus","resultCode","addPost"],"mappings":"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","sourcesContent":["import { profileAPI } from '../../api/api'\n\nconst ADD_POST = 'ADD_POST'\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE'\nconst GET_USER_PROFILE_STATUS = 'GET_USER_PROFILE_STATUS'\n\nexport const addPostAction = (text) => ({\n  type: ADD_POST,\n  value: text\n})\n\nexport const setProfileUsersAction = (profile) => (\n  {type: SET_USERS_PROFILE,\n   value: profile}\n)\n\nexport const getProfileStatusAction = (value) => ({\n  type: GET_USER_PROFILE_STATUS,\n  status: value\n})\n\nconst initialState = {\n  PostsData: [\n    {id: '1', message: 'Hi it is my first post'},\n    {id: '2', message: 'This is second post'}\n  ],\n  profile: null,\n  status: \"\"\n}\n\nconst profileReducer = (state = initialState, action) => {\n  if (!action) {\n    return \n  }\n\n  switch (action.type) {\n    case ADD_POST:\n      return {\n        ...state,\n        PostsData: [...state.PostsData, {id: action.id, message: action.value, likes: '0'}],\n      }\n\n    case SET_USERS_PROFILE:\n      return {\n        ...state,\n        profile: action.value\n      }\n\n    case GET_USER_PROFILE_STATUS:\n      return {\n        ...state,\n        status: action.status\n      }  \n    \n    default:\n      return state\n  }\n}\n\nexport default profileReducer\n\n// Thunk for get profile \nexport const getProfile = (userId) => {\n  return async (dispatch) => {\n    const response = await profileAPI.getUsersProfile(userId);\n    dispatch(setProfileUsersAction(response.data))\n  }\n}\n\n// Thunk for get profile \nexport const getProfileStatus = (userId) => {\n  return async (dispatch) => {\n    const response = await profileAPI.getStatus(userId)\n    dispatch(getProfileStatusAction(response.data))\n  }\n}\n\n// Thunk for updating profile status\nexport const updateProfileStatus = (status) => {\n  return async (dispatch) => {\n    const response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n      dispatch(getProfileStatusAction(status))\n    }\n  }\n}\n\n// Thunk for add post form messages in profile\nexport const addPost = (text) => {\n  return (dispatch) => {\n    dispatch(addPostAction(text))\n  }\n}"]},"metadata":{},"sourceType":"module"}