{"ast":null,"code":"import { usersAPI } from '../../api/api';\nimport { updateObjectInArray } from '../../components/Utils/objectHelper';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_COUNT_OF_USERS = 'SET_TOTAL_COUNT_OF_USERS';\nconst TOGGLE_FETCHING_STATUS = 'TOGGLE_FETCHING_STATUS';\nconst TOGGLE_BUTTON_STATUS = 'TOGGLE_BUTTON_STATUS';\nconst initialState = {\n  usersData: [],\n  usersOnPage: 5,\n  countOfUsers: 19,\n  currentPageNumber: 1,\n  isFetching: false,\n  buttonsDisabledArray: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", {\n          followType: true\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", {\n          followType: false\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          usersData: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPageNumber: action.pageNumber\n        };\n      }\n\n    case SET_TOTAL_COUNT_OF_USERS:\n      {\n        return { ...state,\n          countOfUsers: action.countOfUsers\n        };\n      }\n\n    case TOGGLE_FETCHING_STATUS:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_BUTTON_STATUS:\n      {\n        // debugger\n        return { ...state,\n          buttonsDisabledArray: action.isFetching ? [...state.buttonsDisabledArray, action.userId] : [state.buttonsDisabledArray.filter(id => id !== action.userId)]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followAction = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAction = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAction = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPageAction = pageNumber => ({\n  type: SET_CURRENT_PAGE,\n  pageNumber\n});\nexport const setTotalCountOfUsers = countOfUsers => ({\n  type: SET_TOTAL_COUNT_OF_USERS,\n  countOfUsers\n});\nexport const toggleFetchingStatus = isFetching => ({\n  type: TOGGLE_FETCHING_STATUS,\n  isFetching\n});\nexport const toggleButtonStatus = (isFetching, userId) => ({\n  type: TOGGLE_BUTTON_STATUS,\n  isFetching,\n  userId\n});\nexport default usersReducer;\nexport const getUsers = (pageNumber = initialState.currentPageNumber) => {\n  return dispatch => {\n    dispatch(setCurrentPageAction(pageNumber));\n    dispatch(toggleButtonStatus(true));\n    usersAPI.getUsers(pageNumber, initialState.usersOnPage).then(response => {\n      dispatch(toggleFetchingStatus(false));\n      dispatch(setUsersAction(response.items));\n\n      if (pageNumber === initialState.currentPageNumber) {\n        dispatch(setTotalCountOfUsers(response.totalCount));\n      }\n    });\n  };\n};\n\nconst toggleFollowStatus = async (userId, dispatch, apiUsersMethod, actionMethod) => {\n  dispatch(toggleButtonStatus(true, userId));\n  const response = await apiUsersMethod(userId);\n\n  if (response.resultCode === 0) {\n    dispatch(actionMethod(userId));\n  }\n\n  dispatch(toggleButtonStatus(false, userId));\n};\n\nexport const unfollow = userId => {\n  return async dispatch => {\n    await toggleFollowStatus(userId, dispatch, usersAPI.getUsersForUnfollow.bind(usersAPI), unfollowAction);\n  };\n};\nexport const follow = userId => {\n  return async dispatch => {\n    await toggleFollowStatus(userId, dispatch, usersAPI.getUsersForFollow.bind(usersAPI), followAction);\n  };\n};","map":{"version":3,"sources":["/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/src/redux/reducers/usersReducer.js"],"names":["usersAPI","updateObjectInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT_OF_USERS","TOGGLE_FETCHING_STATUS","TOGGLE_BUTTON_STATUS","initialState","usersData","usersOnPage","countOfUsers","currentPageNumber","isFetching","buttonsDisabledArray","usersReducer","state","action","type","userId","followType","users","pageNumber","filter","id","followAction","unfollowAction","setUsersAction","setCurrentPageAction","setTotalCountOfUsers","toggleFetchingStatus","toggleButtonStatus","getUsers","dispatch","then","response","items","totalCount","toggleFollowStatus","apiUsersMethod","actionMethod","resultCode","unfollow","getUsersForUnfollow","bind","follow","getUsersForFollow"],"mappings":"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","sourcesContent":["import { usersAPI } from '../../api/api'\nimport {updateObjectInArray} from '../../components/Utils/objectHelper';\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_TOTAL_COUNT_OF_USERS = 'SET_TOTAL_COUNT_OF_USERS'\nconst TOGGLE_FETCHING_STATUS = 'TOGGLE_FETCHING_STATUS'\nconst TOGGLE_BUTTON_STATUS = 'TOGGLE_BUTTON_STATUS'\n\nconst initialState = {\n  usersData: [],\n  usersOnPage: 5,\n  countOfUsers: 19,\n  currentPageNumber: 1,\n  isFetching: false,\n  buttonsDisabledArray: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", {followType: true})\n      }\n    case UNFOLLOW:\n      return {\n        ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", {followType: false})\n      }\n    case SET_USERS: {\n      return {...state, usersData: action.users}\n    }\n    case SET_CURRENT_PAGE: {\n      return {...state, currentPageNumber: action.pageNumber}\n    }\n    case SET_TOTAL_COUNT_OF_USERS: {\n      return {...state, countOfUsers: action.countOfUsers}\n    }\n    case TOGGLE_FETCHING_STATUS: {\n      return {...state, isFetching: action.isFetching}\n    }\n    case TOGGLE_BUTTON_STATUS: {\n      // debugger\n      return {\n        ...state, \n        buttonsDisabledArray: action.isFetching ? \n        [...state.buttonsDisabledArray, action.userId] :\n        [state.buttonsDisabledArray.filter(id => id !== action.userId)]\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport const followAction = (userId) => ({type: FOLLOW, userId})\nexport const unfollowAction = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsersAction = (users) => ({type: SET_USERS, users})\nexport const setCurrentPageAction = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber})\nexport const setTotalCountOfUsers = (countOfUsers) => ({type: SET_TOTAL_COUNT_OF_USERS, countOfUsers})\nexport const toggleFetchingStatus = (isFetching) => ({type: TOGGLE_FETCHING_STATUS, isFetching})\nexport const toggleButtonStatus = (isFetching, userId) => ({type: TOGGLE_BUTTON_STATUS, isFetching, userId})\n\nexport default usersReducer\n\nexport const getUsers = (pageNumber = initialState.currentPageNumber) => {\n   return (dispatch) => {\n      \n      dispatch(setCurrentPageAction(pageNumber))\n      dispatch(toggleButtonStatus(true))\n\n      usersAPI.getUsers(pageNumber, initialState.usersOnPage).then(response => {\n        dispatch(toggleFetchingStatus(false))\n        dispatch(setUsersAction(response.items))\n\n        if (pageNumber === initialState.currentPageNumber) {\n           dispatch(setTotalCountOfUsers(response.totalCount))\n        }\n    })\n   }\n}\n\nconst toggleFollowStatus = async (userId, dispatch, apiUsersMethod, actionMethod) => {\n  dispatch(toggleButtonStatus(true, userId))\n  const response = await apiUsersMethod(userId)\n  if (response.resultCode === 0) {\n    dispatch(actionMethod(userId))\n  }\n  dispatch(toggleButtonStatus(false, userId))\n}\n\nexport const unfollow = (userId) => {\n  return async (dispatch) => {\n    await toggleFollowStatus(userId, dispatch, usersAPI.getUsersForUnfollow.bind(usersAPI), unfollowAction)\n  }\n}\n\nexport const follow = (userId) => {\n  return async (dispatch) => {\n    await toggleFollowStatus(userId, dispatch, usersAPI.getUsersForFollow.bind(usersAPI), followAction)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}