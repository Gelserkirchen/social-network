{"ast":null,"code":"import axios from 'axios';\nconst axiosConfig = axios.create({\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  withCredentials: true,\n  headers: {\n    \"API-KEY\": \"b81cfe18-8544-477a-8074-de2d1a56b5a1\"\n  }\n});\nexport const usersAPI = {\n  // download users from server\n  async getUsers(pageNumber, usersOnPage) {\n    const response = await axiosConfig.get(`users?page=${pageNumber}&count=${usersOnPage}`);\n    return response.data;\n  },\n\n  // follow button\n  async getUsersForUnfollow(userId) {\n    const response = await axiosConfig.delete(`follow/${userId}`);\n    return response.data;\n  },\n\n  // unfollow button\n  async getUsersForFollow(userId) {\n    const response = await axiosConfig.post(`follow/${userId}`);\n    return response.data;\n  },\n\n  // get Profile for profileReducer\n  async getUsersProfile(userId) {\n    const response = await axiosConfig.get(`profile/${userId}`);\n    console.log('response inside User API', response.data);\n    return response;\n  } // // header container\n  // async authOnServer () {\n  //     const response = await axiosConfig.get(`auth/me`)\n  //     return response.data\n  // }\n\n\n};\nexport const profileAPI = {\n  // get Profile for profileReducer\n  async getUsersProfile(userId) {\n    const response = await axiosConfig.get(`profile/${userId}`);\n    return response;\n  },\n\n  async getStatus(userId) {\n    const response = await axiosConfig.get(`profile/status/${userId}`);\n    return response;\n  },\n\n  async updateStatus(statusToPush) {\n    const response = await axiosConfig.put(`profile/status`, {\n      status: statusToPush\n    });\n    return response;\n  },\n\n  async savePhoto(photoFile) {\n    const formData = new FormData();\n    formData.append('image', photoFile);\n    const response = await axiosConfig.put(`profile/status`, {\n      status: statusToPush\n    });\n    return response;\n  }\n\n};\nexport const authAPI = {\n  async me() {\n    const response = await axiosConfig.put(`auth/me`);\n    return response;\n  },\n\n  async login(email, password, rememberMe = false) {\n    const response = await axiosConfig.post(`auth/login`, {\n      email,\n      password,\n      rememberMe\n    });\n    return response;\n  },\n\n  async logout() {\n    const response = await axiosConfig.delete(`/auth/login`);\n    return response;\n  }\n\n};","map":{"version":3,"sources":["/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/src/api/api.js"],"names":["axios","axiosConfig","create","baseURL","withCredentials","headers","usersAPI","getUsers","pageNumber","usersOnPage","response","get","data","getUsersForUnfollow","userId","delete","getUsersForFollow","post","getUsersProfile","console","log","profileAPI","getStatus","updateStatus","statusToPush","put","status","savePhoto","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","logout"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst axiosConfig = axios.create({\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    withCredentials: true,\n    headers: { \"API-KEY\": \"b81cfe18-8544-477a-8074-de2d1a56b5a1\" }\n})\n\nexport const usersAPI = {\n    // download users from server\n    async getUsers (pageNumber, usersOnPage) {\n        const response = await axiosConfig.get(`users?page=${pageNumber}&count=${usersOnPage}`)\n        return response.data\n    },\n\n    // follow button\n    async getUsersForUnfollow (userId) {\n        const response = await axiosConfig.delete(`follow/${userId}`)\n        return response.data\n    },\n\n    // unfollow button\n    async getUsersForFollow (userId) {\n        const response = await axiosConfig.post(`follow/${userId}`)\n        return response.data\n    },\n\n    // get Profile for profileReducer\n    async getUsersProfile (userId) {\n        const response = await axiosConfig.get(`profile/${userId}`)\n        console.log('response inside User API', response.data)\n        return response\n    },\n\n    // // header container\n    // async authOnServer () {\n    //     const response = await axiosConfig.get(`auth/me`)\n    //     return response.data\n    // }\n}\n\n\nexport const profileAPI = {\n    // get Profile for profileReducer\n    async getUsersProfile (userId) {\n        const response = await axiosConfig.get(`profile/${userId}`)\n        return response\n    },\n\n    async getStatus (userId) {\n        const response = await axiosConfig.get(`profile/status/${userId}`)\n        return response\n    },\n\n    async updateStatus (statusToPush) {\n        const response = await axiosConfig.put(`profile/status`, {\n            status: statusToPush\n        })\n        return response\n    },\n\n    async savePhoto (photoFile) {\n        const formData = new FormData();\n        formData.append('image', photoFile)\n        const response = await axiosConfig.put(`profile/status`, {\n            status: statusToPush\n        })\n        return response\n    },\n}\n\nexport const authAPI = {\n    async me () {\n        const response = await axiosConfig.put(`auth/me`)\n        return response\n    },\n\n    async login (email, password, rememberMe = false) {\n        const response = await axiosConfig.post(`auth/login`, {\n            email,\n            password,\n            rememberMe\n        })\n        return response\n    },\n\n    async logout () {\n        const response = await axiosConfig.delete(`/auth/login`)\n        return response\n    },\n}\n\n"]},"metadata":{},"sourceType":"module"}