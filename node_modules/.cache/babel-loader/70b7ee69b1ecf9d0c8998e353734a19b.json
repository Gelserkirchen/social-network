{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/src/components/Dialoges/Dialogs.jsx\";\nimport React from 'react';\nimport styles from './Dialogs.module.css';\nimport DialogItem from './DiaglogsItem/DialogsItem';\nimport Message from './Messages/MessagesItems';\nimport { reduxForm, Field, Form } from 'redux-form';\nimport { TextArea } from '../MultiComponents/FormsControl/FormsControl';\nimport { maxLengthValidator, valueValidator } from '../Utils/Validators/validators';\nconst maxLengthValidator100 = maxLengthValidator(100);\n\nconst Dialogs = props => {\n  let state = props.dialogPages;\n  const dialogs = state.DialogsData.map(element => {\n    return /*#__PURE__*/_jsxDEV(DialogItem, {\n      name: element.name,\n      id: element.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  });\n  const messages = state.MessagesData.map(element => {\n    return /*#__PURE__*/_jsxDEV(Message, {\n      message: element.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  });\n\n  const addMessageToDialoge = text => {\n    props.addMessageToDialog(text.dialogesMessages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dialogItem,\n      children: dialogs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messages,\n        children: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogsReduxForm, {\n        onSubmit: addMessageToDialoge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\nexport const DialogComponent = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: TextArea,\n        name: \"dialogesMessages\",\n        placeholder: \"enter text here\",\n        validate: [valueValidator, maxLengthValidator100]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Add Message \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DialogComponent;\nconst DialogsReduxForm = reduxForm({\n  form: 'dialogesMessages'\n})(DialogComponent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dialogs\");\n$RefreshReg$(_c2, \"DialogComponent\");","map":{"version":3,"sources":["/Users/tolstyhandrejaleksandrovic/Documents/GitHub/social-network/src/components/Dialoges/Dialogs.jsx"],"names":["React","styles","DialogItem","Message","reduxForm","Field","Form","TextArea","maxLengthValidator","valueValidator","maxLengthValidator100","Dialogs","props","state","dialogPages","dialogs","DialogsData","map","element","name","id","messages","MessagesData","message","addMessageToDialoge","text","addMessageToDialog","dialogesMessages","dialogItem","DialogComponent","handleSubmit","DialogsReduxForm","form"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,QAAuC,YAAvC;AACA,SAASC,QAAT,QAAyB,8CAAzB;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,gCAAnD;AAEA,MAAMC,qBAAqB,GAAGF,kBAAkB,CAAC,GAAD,CAAhD;;AAEA,MAAMG,OAAO,GAAIC,KAAD,IAAW;AAEzB,MAAIC,KAAK,GAAGD,KAAK,CAACE,WAAlB;AAEA,QAAMC,OAAO,GAAGF,KAAK,CAACG,WAAN,CAAkBC,GAAlB,CAAsBC,OAAO,IAAI;AAC/C,wBAAO,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,OAAO,CAACC,IAA1B;AAAgC,MAAA,EAAE,EAAED,OAAO,CAACE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFe,CAAhB;AAIA,QAAMC,QAAQ,GAAGR,KAAK,CAACS,YAAN,CAAmBL,GAAnB,CAAuBC,OAAO,IAAI;AACjD,wBAAO,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,OAAO,CAACK;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFgB,CAAjB;;AAIA,QAAMC,mBAAmB,GAAIC,IAAD,IAAU;AACpCb,IAAAA,KAAK,CAACc,kBAAN,CAAyBD,IAAI,CAACE,gBAA9B;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAE1B,MAAM,CAACc,OAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEd,MAAM,CAAC2B,UAAvB;AAAA,gBACGb;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEd,MAAM,CAACoB,QAAvB;AAAA,kBACGA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEG;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA7BD;;KAAMb,O;AA+BN,eAAeA,OAAf;AAEA,OAAO,MAAMkB,eAAe,GAAIjB,KAAD,IAAW;AACxC,sBACE;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACkB,YAAtB;AAAA,4BACI;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEvB,QAAlB;AAA4B,QAAA,IAAI,EAAE,kBAAlC;AAAsD,QAAA,WAAW,EAAE,iBAAnE;AACA,QAAA,QAAQ,EAAE,CAACE,cAAD,EAAiBC,qBAAjB;AADV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZM;MAAMmB,e;AAcb,MAAME,gBAAgB,GAAG3B,SAAS,CAAC;AAAC4B,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAAsCH,eAAtC,CAAzB","sourcesContent":["import React from 'react'\nimport styles from './Dialogs.module.css'\nimport DialogItem from './DiaglogsItem/DialogsItem';\nimport Message from './Messages/MessagesItems';\nimport { reduxForm, Field, Form } from 'redux-form';\nimport { TextArea } from '../MultiComponents/FormsControl/FormsControl';\nimport { maxLengthValidator, valueValidator } from '../Utils/Validators/validators';\n\nconst maxLengthValidator100 = maxLengthValidator(100)\n\nconst Dialogs = (props) => {\n\n  let state = props.dialogPages\n\n  const dialogs = state.DialogsData.map(element => {\n    return <DialogItem name={element.name} id={element.id}/>\n  })\n\n  const messages = state.MessagesData.map(element => {\n    return <Message message={element.message}/>\n  })\n\n  const addMessageToDialoge = (text) => {\n    props.addMessageToDialog(text.dialogesMessages)\n  }\n\n  return (\n    <div className={styles.dialogs}>\n      <div className={styles.dialogItem}>\n        {dialogs}\n      </div>\n      <div>\n        <div className={styles.messages}>\n          {messages}\n        </div>\n        <DialogsReduxForm onSubmit={addMessageToDialoge}/>\n      </div>\n    </div>\n  )\n}\n\nexport default Dialogs\n\nexport const DialogComponent = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n        <div>\n          <Field component={TextArea} name={\"dialogesMessages\"} placeholder={\"enter text here\"}\n          validate={[valueValidator, maxLengthValidator100]}/>\n        </div>\n        <div>\n          <button > Add Message </button>\n        </div>\n    </form>\n  )\n}\n\nconst DialogsReduxForm = reduxForm({form: 'dialogesMessages'})(DialogComponent)"]},"metadata":{},"sourceType":"module"}