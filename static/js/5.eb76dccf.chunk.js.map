{"version":3,"sources":["components/Dialoges/Dialogs.module.css","components/HOC/withAuthRedirect.js","components/Dialoges/DiaglogsItem/DialogsItem.jsx","components/Dialoges/Messages/MessagesItems.jsx","components/Dialoges/Dialogs.jsx","components/Dialoges/DialogsContainer.jsx"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirectComponent","Component","RedirectComponent","getAuthUserData","this","props","to","React","connect","DialogItem","path","id","className","styles","dialog","name","Message","messageItem","message","maxLengthValidator100","maxLengthValidator","Dialogs","dialogPages","dialogs","DialogsData","map","element","messages","MessagesData","dialogItem","DialogsReduxForm","onSubmit","text","addMessageToDialog","dialogesMessages","reduxForm","form","handleSubmit","Field","component","TextArea","placeholder","validate","valueValidator","compose"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,0B,6JCInGC,EAAkB,SAACC,GAEnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAA4B,SAACC,GAAe,IAC/CC,EAD8C,uKAK5C,OADAC,cACKC,KAAKC,MAAMP,OACT,cAACG,EAAD,eAAeG,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eALD,GACpBC,IAAMN,WAWtC,OAFyCO,YAAQZ,EAAiB,GAAzBY,CAA6BN,K,6FCT3DO,EAVI,SAACJ,GAClB,IAAMK,EAAO,YAAcL,EAAMM,GAEjC,OACE,qBAAKC,UAAWC,IAAOC,OAAvB,SACE,cAAC,IAAD,CAASR,GAAII,EAAb,SAAoBL,EAAMU,UCCjBC,EAPC,SAACX,GAEf,OACE,qBAAKO,UAAWC,IAAOI,YAAvB,SAAqCZ,EAAMa,W,kCCGzCC,EAAwBC,YAAmB,KAiClCC,EA/BC,SAAChB,GAEf,IAAIR,EAAQQ,EAAMiB,YAEZC,EAAU1B,EAAM2B,YAAYC,KAAI,SAAAC,GACpC,OAAO,cAAC,EAAD,CAAYX,KAAMW,EAAQX,KAAMJ,GAAIe,EAAQf,QAG/CgB,EAAW9B,EAAM+B,aAAaH,KAAI,SAAAC,GACtC,OAAO,cAAC,EAAD,CAASR,QAASQ,EAAQR,aAOnC,OACE,sBAAKN,UAAWC,IAAOU,QAAvB,UACE,qBAAKX,UAAWC,IAAOgB,WAAvB,SACGN,IAEH,gCACE,qBAAKX,UAAWC,IAAOc,SAAvB,SACGA,IAEH,cAACG,EAAD,CAAkBC,SAbI,SAACC,GAC3B3B,EAAM4B,mBAAmBD,EAAKE,4BAkC5BJ,EAAmBK,YAAU,CAACC,KAAM,oBAAjBD,EAdM,SAAC9B,GAC9B,OACE,uBAAM0B,SAAU1B,EAAMgC,aAAtB,UACI,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUzB,KAAM,mBAAoB0B,YAAa,kBACnEC,SAAU,CAACC,IAAgBxB,OAE7B,8BACE,2D,wBCvCKyB,sBACb5C,IACAQ,aARsB,SAACX,GACvB,MAAO,CACLyB,YAAazB,EAAMyB,eAMI,CACvBW,yBAHWW,CAKbvB","file":"static/js/5.eb76dccf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2FbnJ\",\"dialogItem\":\"Dialogs_dialogItem__3po_M\",\"active\":\"Dialogs_active__1tVR0\"};","import React from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport {getAuthUserData} from '../../redux/reducers/authReducer'\n\nlet mapStateToProps = (state) => {\n    // getAuthUserData()\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirectComponent = (Component) => {\n    class RedirectComponent extends React.Component {\n        render () {\n            // debugger\n            getAuthUserData()\n            if (!this.props.isAuth) return <Redirect to={\"/Login\"}/> \n            return <Component {...this.props}/>\n        }\n    }\n\n    const ConnectedAuthRedirectedComponent = connect(mapStateToProps, {})(RedirectComponent) \n\n    return ConnectedAuthRedirectedComponent\n}\n\n\n","import styles from '../Dialogs.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  const path = '/Dialogs/' + props.id\n\n  return (\n    <div className={styles.dialog}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  )\n}\n\nexport default DialogItem","import styles from '../Dialogs.module.css';\n\nconst Message = (props) => {\n\n  return (\n    <div className={styles.messageItem}>{props.message}</div>\n  )\n}\n\nexport default Message\n","import React from 'react'\nimport styles from './Dialogs.module.css'\nimport DialogItem from './DiaglogsItem/DialogsItem';\nimport Message from './Messages/MessagesItems';\nimport { reduxForm, Field, Form } from 'redux-form';\nimport { TextArea } from '../MultiComponents/FormsControl/FormsControl';\nimport { maxLengthValidator, valueValidator } from '../Utils/Validators/validators';\n\nconst maxLengthValidator100 = maxLengthValidator(100)\n\nconst Dialogs = (props) => {\n\n  let state = props.dialogPages\n\n  const dialogs = state.DialogsData.map(element => {\n    return <DialogItem name={element.name} id={element.id}/>\n  })\n\n  const messages = state.MessagesData.map(element => {\n    return <Message message={element.message}/>\n  })\n\n  const addMessageToDialoge = (text) => {\n    props.addMessageToDialog(text.dialogesMessages)\n  }\n\n  return (\n    <div className={styles.dialogs}>\n      <div className={styles.dialogItem}>\n        {dialogs}\n      </div>\n      <div>\n        <div className={styles.messages}>\n          {messages}\n        </div>\n        <DialogsReduxForm onSubmit={addMessageToDialoge}/>\n      </div>\n    </div>\n  )\n}\n\nexport default Dialogs\n\nexport const DialogComponent = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n        <div>\n          <Field component={TextArea} name={\"dialogesMessages\"} placeholder={\"enter text here\"}\n          validate={[valueValidator, maxLengthValidator100]}/>\n        </div>\n        <div>\n          <button > Add Message </button>\n        </div>\n    </form>\n  )\n}\n\nconst DialogsReduxForm = reduxForm({form: 'dialogesMessages'})(DialogComponent)","import {addMessageToDialog} from '../../redux/reducers/messagesReducer';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirectComponent } from '../HOC/withAuthRedirect'\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogPages: state.dialogPages\n  }\n}\n\nexport default compose(\n  withAuthRedirectComponent,\n  connect(mapStateToProps, {\n    addMessageToDialog\n  }),\n)(Dialogs)"],"sourceRoot":""}