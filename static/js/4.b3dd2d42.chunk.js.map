{"version":3,"sources":["components/HOC/withAuthRedirect.js","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/MyPost/Post.module.css","components/Profile/MyPosts/ProfileInfo/ProfileStatus.jsx","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPost/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirectComponent","Component","RedirectComponent","getAuthUserData","this","props","to","React","connect","module","exports","ProfileStatusWithHook","useState","editStatus","setEditStatus","status","updateStatus","useEffect","toggleStatus","updateProfileStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","type","ProfileInfo","profile","src","alt","className","styles","avatar","photos","large","fullName","console","log","Preloader","Post","item","message","maxLengthValidator10","maxLengthValidator","MyPosts","memo","posts","profilePage","PostsData","map","element","MessageReduxForm","onSubmit","values","addPost","messageFormComponent","reduxForm","form","handleSubmit","Field","component","TextArea","name","placeholder","validate","valueValidator","buttons","MyPostsContainer","Profile","store","ProfileContainer","userId","match","params","authorisedUserId","getProfile","getProfileStatus","compose","withRouter"],"mappings":"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","file":"static/js/4.b3dd2d42.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport {getAuthUserData} from '../../redux/reducers/authReducer'\n\nlet mapStateToProps = (state) => {\n    // getAuthUserData()\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirectComponent = (Component) => {\n    class RedirectComponent extends React.Component {\n        render () {\n            // debugger\n            getAuthUserData()\n            if (!this.props.isAuth) return <Redirect to={\"/Login\"}/> \n            return <Component {...this.props}/>\n        }\n    }\n\n    const ConnectedAuthRedirectedComponent = connect(mapStateToProps, {})(RedirectComponent) \n\n    return ConnectedAuthRedirectedComponent\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"ProfileInfo_banner__1apVG\",\"avatar\":\"ProfileInfo_avatar__2f2Kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"MyPosts_buttons__2wUXL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Yt1g\"};","import React from \"react\";\nimport styles from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../../MultiComponents/Preloader\";\nimport { render } from \"@testing-library/react\";\n\nclass ProfileStatus extends React.Component {\n  state = {\n    editMode: false,\n    status: this.props.status\n  };\n\n  toggleStatus = () => {\n      this.setState ({\n        editMode: !this.state.editMode\n      })\n\n      this.props.updateProfileStatus(this.state.status)   \n  }\n\n  updateLocalStatus = (e) => {\n      this.setState({\n        status: e.currentTarget.value\n      })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n      if (this.props.status != prevProps.status) {\n        this.setState({\n            status: this.props.status\n          })\n      }\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.editMode && (\n          <div>\n            <span onDoubleClick={this.toggleStatus}><b>Status:</b> {this.state.status}</span>\n          </div>\n        )}\n        {this.state.editMode && (\n          <div>\n            <input onChange={this.updateLocalStatus} autoFocus={true} onBlur={this.toggleStatus} type=\"text\" value={this.state.status} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ProfileStatus;\n","import React, {useState, useEffect} from \"react\";\nimport styles from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../../MultiComponents/Preloader\";\nimport { render } from \"@testing-library/react\";\n\nconst ProfileStatusWithHook = (props) => {\n\n  const [editStatus, setEditStatus] = useState(false)\n  const [status, updateStatus] = useState(props.status)\n\n  useEffect(()=> {\n      setEditStatus(props.status)\n  }, [props.status])\n\n  const toggleStatus = () => {\n    setEditStatus(!editStatus)\n    props.updateProfileStatus(status)\n  }\n\n  const updateLocalStatus = (e) => {\n    updateStatus(e.currentTarget.value)\n  }\n\n  return (\n    <div>\n      {!editStatus && (\n        <div>\n          <span onDoubleClick={toggleStatus}><b>Status:</b> {status}</span>\n        </div>\n      )}\n      {editStatus && (\n        <div>\n          <input onChange={updateLocalStatus} autoFocus={true} onBlur={toggleStatus} type=\"text\" value={status} />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProfileStatusWithHook;\n","import React from 'react'\nimport styles from './ProfileInfo.module.css'\nimport Preloader from '../../../MultiComponents/Preloader';\nimport ProfileStatus from './ProfileStatus'\nimport ProfileStatusWithHook from './ProfileStatusWithHooks';\n\nconst ProfileInfo = (props) => {\n\n  // debugger\n  if (!props.profile) {\n    console.log('props in profileInfo', props)\n    return <Preloader/>\n  }\n\n  return (\n    <div>\n      <div><img src=\"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fimages4.fanpop.com%2Fimage%2Fphotos%2F21800000%2FBanner-P-summer448-21813774-2560-1024.jpg&f=1&nofb=1\" alt=\"\"/></div>\n      <div className={styles.avatar}><img src={props.profile.photos.large} alt=''/></div>\n      <div>{props.profile.fullName}</div>\n      <div><ProfileStatusWithHook status={props.status} updateProfileStatus={props.updateProfileStatus}/></div>\n    </div>\n  )\n}\n\nexport default ProfileInfo","import React from 'react'\nimport styles from './Post.module.css'\n\nconst Post = (props) => {\n  return (\n      <div className={styles.item}>\n        <img src=\"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fimg.3dyuriki.com%2FAvatar%2Fmister-Bin-film-Avatar.jpg&f=1&nofb=1\" alt=\"\"/>\n        {props.message}\n        <div>\n          <span>like</span>\n        </div>\n      </div>\n  )\n}\n\nexport default Post","import React from 'react'\nimport styles from './MyPosts.module.css'\nimport Post from './MyPost/Post';\nimport { reduxForm, Field } from 'redux-form'\nimport { valueValidator, maxLengthValidator} from '../../Utils/Validators/validators'\nimport { TextArea } from '../../MultiComponents/FormsControl/FormsControl';\n\nconst maxLengthValidator10 = maxLengthValidator(10)\n\nconst MyPosts = React.memo((props) => {\n\n  let posts = props.profilePage.PostsData.map(element => {\n    return <Post message={element.message}/>\n  })\n\n  const submitMessage = (values) => {\n    props.addPost(values.messageFormComponent)\n  }\n\n  return (\n    <div>\n      <h3>My posts</h3>\n      <MessageReduxForm onSubmit={submitMessage}/>\n      <div className={styles.posts}>\n        {posts}\n      </div>\n    </div>\n  )\n})\n\nconst MessageComponent = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={TextArea}\n               name={\"messageFormComponent\"}\n               placeholder={\"enter text here\"}\n               validate={[valueValidator, maxLengthValidator10]}/>\n      </div>\n      <div className={ styles.buttons }>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n}\n\nconst MessageReduxForm = reduxForm({form: 'profileMessages'})(MessageComponent)\n\nexport default MyPosts","import MyPosts from './MyPosts';\nimport {addPost} from '../../../redux/reducers/profileReducer';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    profilePage: state.profilePage,\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {\n  addPost\n})(MyPosts)\n\nexport default MyPostsContainer","import React from 'react'\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n  console.log('props in pofile', props)\n\n  return (\n    <div>\n      <ProfileInfo profile={props.profile.profile} status={props.profile.status} updateProfileStatus={props.updateProfileStatus}/>\n      <MyPostsContainer store = {props.profile.store} />\n    </div>\n  )\n}\n\nexport default Profile","import { getProfile, getProfileStatus, updateProfileStatus } from '../../redux/reducers/profileReducer'\nimport React from 'react'\nimport {connect} from 'react-redux';\nimport Profile from './Profile';\nimport { withRouter } from 'react-router';\nimport { withAuthRedirectComponent } from '../HOC/withAuthRedirect'\nimport { compose } from 'redux'\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n      let userId = this.props.match.params.userId\n      if (!userId) {\n        userId = this.props.authorisedUserId\n      }\n      this.props.getProfile(userId)\n      this.props.getProfileStatus(userId)\n    }\n    render() {    \n      return <Profile {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage,\n    isAuth: state.auth.isAuth,\n    authorisedUserId: state.auth.userId,\n  }\n}\n\nexport default compose(\n  withAuthRedirectComponent,\n  connect(mapStateToProps, {getProfile, getProfileStatus, updateProfileStatus}),\n  withRouter,\n)(ProfileContainer)\n\n\n\n"],"sourceRoot":""}